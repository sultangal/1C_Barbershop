
&НаКлиенте
Процедура ПланировщикПередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ПланировщикПередНачаломРедактирования(Элемент, НовыйЭлемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	СтруктураПараметров = Новый Структура("Ключ", Элемент.ВыделенныеЭлементы[0].Значение);
	ОткрытьФорму("Документ.Запись.ФормаОбъекта", СтруктураПараметров);
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "Изменение_Запись" Тогда
		ЗаполнитьЖурналЗаписей();
	КонецЕсли
КонецПроцедуры

&НаКлиенте
Процедура ПланировщикПередСозданием(Элемент, Начало, Конец, ЗначенияИзмерений, Текст, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ЗначенияЗаполнения = Новый Структура;
	ЗначенияЗаполнения.Вставить("Салон", Салон);
	ЗначенияЗаполнения.Вставить("Дата", Начало);
	ЗначенияЗаполнения.Вставить("ДатаОкончания", Конец);
	ЗначенияЗаполнения.Вставить("Сотрудник", ЗначенияИзмерений["Сотрудник"]);
	
	СтруктураПараметров = Новый Структура("ЗначенияЗаполнения", ЗначенияЗаполнения);
	
	ОткрытьФорму("Документ.Запись.ФормаОбъекта", СтруктураПараметров);
КонецПроцедуры

&НаКлиенте
Процедура СалонПриИзменении(Элемент)
	ОбновитьПериодОтображенияПланировщика();
	ЗаполнитьЖурналЗаписей();
КонецПроцедуры

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	ОбновитьПериодОтображенияПланировщика();
	ЗаполнитьЖурналЗаписей();
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Дата = ТекущаяДатаСеанса();	
	Салон = Справочники.Салоны.ОсновнойСалон();
	СоздатьИзмерениеПланровщика();
	ОбновитьПериодОтображенияПланировщика();
	ЗаполнитьЖурналЗаписей();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьЖурналЗаписей()

	Планировщик.Элементы.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	Запись.Ссылка,
		|	Запись.Дата,
		|	Запись.Салон,
		|	Запись.Сотрудник,
		|	ПРЕДСТАВЛЕНИЕ(Запись.Услуга) КАК Услуга,
		|	Запись.Длительность,
		|	Запись.Сумма,
		|	Запись.Клиент,
		|	Запись.ДатаОкончания,
		|	Запись.Клиент.Телефон КАК Телефон,
		|	Запись.Комментарии
		|ИЗ
		|	Документ.Запись КАК Запись
		|ГДЕ
		|	Запись.Проведен
		|	И Запись.Салон = &Салон
		|	И Запись.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания";
	
	Запрос.УстановитьПараметр("Салон", Салон);
	Запрос.УстановитьПараметр("ДатаНачала", НачалоДня(Дата));
	Запрос.УстановитьПараметр("ДатаОкончания", КонецДня(Дата));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		ЗначенияИзмерений = Новый Соответствие;
		ЗначенияИзмерений.Вставить("Сотрудник", Выборка.Сотрудник);
		
		ЖирныйШрифт = Новый Шрифт(,,Истина);
		
		ПредставлениеКлиента = Строка(Выборка.Клиент) + ", " + Выборка.Телефон;
		МассивСтрок = Новый Массив;
		МассивСтрок.Добавить(Новый ФорматированнаяСтрока(ПредставлениеКлиента, ЖирныйШрифт));
		МассивСтрок.Добавить(Символы.ПС);
		МассивСтрок.Добавить(Выборка.Услуга);
		МассивСтрок.Добавить(Символы.ПС);
		
		Если ЗначениеЗаполнено(Выборка.Комментарии) Тогда
			МассивСтрок.Добавить("-- " + Выборка.Комментарии);
		КонецЕсли;
		
		ЭлементПланировщика = Планировщик.Элементы.Добавить(Выборка.Дата, Выборка.ДатаОкончания);	
		ЭлементПланировщика.ЗначенияИзмерений = Новый ФиксированноеСоответствие(ЗначенияИзмерений);
		ЭлементПланировщика.Значение = Выборка.Ссылка;
		ЭлементПланировщика.Текст = Новый ФорматированнаяСтрока(МассивСтрок);

	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура СоздатьИзмерениеПланровщика()
	
	Измерение = Планировщик.Измерения.Добавить("Сотрудник");
	Выборка = Справочники.Сотрудники.Выбрать();
	
	Пока Выборка.Следующий() Цикл
	
		Если Выборка.ПометкаУдаления Тогда
			Продолжить;
		КонецЕсли;
		
		ЗначениеИзмерения = Измерение.Элементы.Добавить(Выборка.Ссылка);
		ЗначениеИзмерения.Текст = 
			Выборка.Наименование + Символы.ПС + Выборка.Должность;
		ЗначениеИзмерения.ЦветРамки = WebЦвета.Синий;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьПериодОтображенияПланировщика()
	
	Начало = НачалоДня(Дата) + 9*3600;
	Конец = НачалоДня(Дата) + 19*3600;
	
	Планировщик.ТекущиеПериодыОтображения.Очистить();
	Планировщик.ТекущиеПериодыОтображения.Добавить(Начало, Конец);
	
КонецПроцедуры

